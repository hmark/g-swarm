package geep.haiku;import robocode.*;/** * Ver 1.0 * * All code sections on onScannedRobot were evolutionary evolved. No manual
optimization was made. * * [[geep 21/9/2004]] */public class GPBotC extends AdvancedRobot{ public void run() {

while (true) { turnGunRightRadians(Double.POSITIVE_INFINITY);
} } public void onScannedRobot(ScannedRobotEvent e) {

setAhead((getEnergy() > Math.abs(Math.abs(getEnergy()) ) ? getEnergy() : (getHeadingRadians() > getY() ? getEnergy() :
Math.sin(getEnergy())) + Math.abs(e.getHeadingRadians()) ) + ((setFireBullet(Math.abs(Math.abs(e.getEnergy()) ) )==null ? 0.0 : 1.0) > 0 ?
e.getEnergy() : Math.abs(Math.abs(getBattleFieldWidth()) ) + Math.abs(Math.sin(getEnergy())) ) + Math.abs(((0-(((getHeadingRadians() >
getY() ? getY() : e.getBearingRadians()) > 0 ? e.getEnergy() : getEnergy()))) + Math.sin(getEnergy()) > 0 ? (getEnergy() > getY() ?
e.getBearingRadians() : e.getBearingRadians()) : (getEnergy() > 0 ? e.getEnergy() : getEnergy()))) + getBattleFieldWidth());

setTurnRightRadians(robocode.util.Utils.normalRelativeAngle((0-(Math.abs(Math.sin(Math.abs(getBattleFieldWidth()) +
getBattleFieldWidth() + Math.sin((Math.sin(getEnergy()) > 0 ? e.getEnergy() : getY()))) - (setFireBullet(Math.abs(((getY() > 0 ? e.getEnergy() :
getEnergy()) > getY() ? getEnergy() : e.getBearingRadians())) + Math.abs((setFireBullet(((getBattleFieldWidth() > 0 ? e.getEnergy() :
e.getEnergy()) > 0 ? e.getEnergy() : getEnergy()))==null ? 0.0 : 1.0)) )==null ? 0.0 : 1.0)) ))));

setTurnGunRightRadians(robocode.util.Utils.normalRelativeAngle(getHeadingRadians()-
getGunHeadingRadians()+(getHeadingRadians() > getY() ? Math.abs(Math.sin(Math.sin((getHeadingRadians() > getY() ? getEnergy() :
Math.abs(getHeadingRadians()) )) + Math.abs((((getHeadingRadians() > getY() ? getEnergy() : e.getBearingRadians()) > 0 ? e.getEnergy() :
Math.abs(getBattleFieldWidth()) ) > (e.getBearingRadians() > 0 ? e.getEnergy() : getY()) ? getEnergy() : (getEnergy() > 0 ? e.getEnergy() :
getEnergy()))) ) - (setFireBullet(Math.sin((setFireBullet((Math.abs(e.getEnergy()) > 0 ? e.getEnergy() : getEnergy()))==null ? 0.0 : 1.0)) +
Math.abs((Math.abs(getHeadingRadians()) > (getHeadingRadians() > getY() ? getEnergy() : (getHeadingRadians() > getY() ? getEnergy() :
e.getBearingRadians())) ? getEnergy() : e.getBearingRadians())) )==null ? 0.0 : 1.0)) : e.getBearingRadians()))); }}



/* > Tree 0 ) add (add
(add (ifGreater energy (abs (abs energy)) energy (add (ifGreater heading y energy (sin energy)) (abs enemy_heading))) (ifPositive (fire (abs (abs
enemy_energy))) enemy_energy (add (abs (abs max_x)) (abs (sin energy))))) (abs (ifPositive (add (neg (ifPositive (ifGreater heading y y
enemy_bearing) enemy_energy energy)) (sin energy)) (ifGreater energy y enemy_bearing enemy_bearing) (ifPositive energy enemy_energy
energy)))) max_x) > Tree 1 ) neg (abs (sub (sin (add (abs max_x) (add max_x (sin (ifPositive (sin energy) enemy_energy y))))) (fire (add (abs
(ifGreater (ifPositive y enemy_energy energy) y energy enemy_bearing)) (abs (fire (ifPositive (ifPositive max_x enemy_energy enemy_energy)
enemy_energy energy)))))))) > Tree 2 ) ifGreater heading y (abs (sub (sin (add (sin (ifGreater heading y energy (abs heading))) (abs
(ifGreater (ifPositive (ifGreater heading y energy enemy_bearing) enemy_energy (abs max_x)) (ifPositive enemy_bearing enemy_energy y)
energy (ifPositive energy enemy_energy energy))))) (fire (add (sin (fire (ifPositive (abs enemy_energy) enemy_energy energy))) (abs (ifGreater
(abs heading) (ifGreater heading y energy (ifGreater heading y energy enemy_bearing)) energy enemy_bearing)))))) enemy_bearing/*(